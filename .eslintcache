[{"C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\reportWebVitals.js":"1","C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\MovieList.jsx":"2","C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\App.js":"3","C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\index.js":"4","C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\AddFavorite.jsx":"5","C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\MovieListHeading.jsx":"6","C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\SearchBox.jsx":"7"},{"size":362,"mtime":1607072210656,"results":"8","hashOfConfig":"9"},{"size":1081,"mtime":1607594521027,"results":"10","hashOfConfig":"9"},{"size":3593,"mtime":1607612218864,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1607072210656,"results":"12","hashOfConfig":"9"},{"size":655,"mtime":1607342631694,"results":"13","hashOfConfig":"9"},{"size":1180,"mtime":1607612186206,"results":"14","hashOfConfig":"9"},{"size":400,"mtime":1607607188946,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"syzggm",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\reportWebVitals.js",[],"C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\MovieList.jsx",[],"C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\App.js",[],"C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\index.js",[],"C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\AddFavorite.jsx",[],"C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\MovieListHeading.jsx",["31"],"import React, { useState, useEffect} from 'react';\r\nimport StarRatings from 'react-star-ratings';\r\nimport SearchBox from './SearchBox';\r\nconst MovieListHeading = (props) => {\r\n    // Rating Function\r\n    const [rating, setRating] = useState(0)\r\n    const changeRating = (newRating) => {\r\n        setRating(\r\n            newRating\r\n        )\r\n    }\r\n    // Search Function\r\n    const [searchValue, setSearchValue] = useState('');\r\n    useEffect(() => {\r\n        var newSearchedMovies = props.movies.filter(result => result.title.toUpperCase().includes(searchValue.toUpperCase()) && result.rate >= rating)\r\n        props.setMovies(newSearchedMovies)\r\n    },[searchValue, rating])\r\n\r\n    return (\r\n        <div className='row heading'>\r\n            <h1>{props.heading}</h1>\r\n            <SearchBox\r\n                searchValue={searchValue}\r\n                setSearchValue={setSearchValue} />\r\n            <StarRatings\r\n                rating={rating}\r\n                starRatedColor=\"yellow\"\r\n                changeRating={changeRating}\r\n                numberOfStars={5}\r\n                name='rating'\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieListHeading;","C:\\Users\\Mahmoud\\OneDrive\\Desktop\\dev\\myflix\\src\\components\\SearchBox.jsx",[],{"ruleId":"32","severity":1,"message":"33","line":17,"column":7,"nodeType":"34","endLine":17,"endColumn":28,"suggestions":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [searchValue, rating, props]",{"range":"39","text":"40"},[655,676],"[searchValue, rating, props]"]